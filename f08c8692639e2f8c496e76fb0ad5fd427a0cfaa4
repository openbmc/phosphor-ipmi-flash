{
  "comments": [
    {
      "key": {
        "uuid": "62a37468_36c0a16e",
        "filename": "bmc/version-handler/main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "Seems like we\u0027re already in ipmi_flash namespace, could we take these out?",
      "range": {
        "startLine": 49,
        "startChar": 16,
        "endLine": 49,
        "endChar": 26
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e28018f_52d976e3",
        "filename": "bmc/version-handler/main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62a37468_36c0a16e",
      "range": {
        "startLine": 49,
        "startChar": 16,
        "endLine": 49,
        "endChar": 26
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53bd5ce9_d4af6c0f",
        "filename": "bmc/version-handler/main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "Huh, I didn\u0027t think the compiler would be smart enough to do this for a map where the value is a struct.",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bad4aa0_e11f8b8c",
        "filename": "bmc/version-handler/main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "IIRC, one of the benefits of try_emplace vs emplace.",
      "parentUuid": "53bd5ce9_d4af6c0f",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90f5aa3b_77241120",
        "filename": "bmc/version-handler/test/version_close_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 93,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T20:21:12Z",
      "side": 1,
      "message": "nit: Just for consistency with the other test cases, could we have this call above the EXPECT_CALLs? Although I think we usually have all the EXPECT_CALLs at the top unless order matters so maybe it\u0027s better to change the first and third tests instead.\n\nI think it\u0027s also good to separate out the EXPECT_CALLs from the actual calls (like the ones in EXPECT_TRUE/FALSE) so that you see what method is actually being called and which are the mocks you\u0027re overriding with EXPECT_CALL.",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a67580d5_e8b296cf",
        "filename": "bmc/version-handler/test/version_close_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 93,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "ack, moved EXPECT_CALL to the top of each test.",
      "parentUuid": "90f5aa3b_77241120",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "926f1fa5_da32140f",
        "filename": "bmc/version-handler/test/version_handler_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T20:21:12Z",
      "side": 1,
      "message": "nit: I\u0027m guessing this is for reference to help the readers? I\u0027m not sure if it\u0027s too helpful with this test in particular though, as the structs are not really used too much here from what I see?\n\nIf you\u0027re keeping it, it\u0027d be good to put a comment explaining why you decided to put this here.",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94d45484_21c061e7",
        "filename": "bmc/version-handler/test/version_handler_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "removed, was for my reference for copy-pasting and just never removed it.",
      "parentUuid": "926f1fa5_da32140f",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "763c7dff_3590c9c8",
        "filename": "bmc/version-handler/test/version_handler_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T20:21:12Z",
      "side": 1,
      "message": "nit: newline after this.",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30a20a4c_d856f03b",
        "filename": "bmc/version-handler/test/version_handler_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "763c7dff_3590c9c8",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2514bd0d_8435c3e2",
        "filename": "bmc/version-handler/test/version_open_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T20:21:12Z",
      "side": 1,
      "message": "Not sure if you need to do the i++ here - seems like this is to be used in the test below?",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 58,
        "endChar": 27
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a77e7fe7_6f487a61",
        "filename": "bmc/version-handler/test/version_open_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2514bd0d_8435c3e2",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 58,
        "endChar": 27
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b54eda00_373c9adc",
        "filename": "bmc/version-handler/test/version_open_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 80,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T20:21:12Z",
      "side": 1,
      "message": "nit: you can define this as a constant session number in the class, so that you can show that it\u0027s the same number between close and open.",
      "range": {
        "startLine": 80,
        "startChar": 24,
        "endLine": 80,
        "endChar": 25
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecab0bcd_d2a74785",
        "filename": "bmc/version-handler/test/version_open_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 80,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b54eda00_373c9adc",
      "range": {
        "startLine": 80,
        "startChar": 24,
        "endLine": 80,
        "endChar": 25
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7abb910_3e21ea20",
        "filename": "bmc/version-handler/test/version_open_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 95,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T20:21:12Z",
      "side": 1,
      "message": "continuing from the above comment, this could be the constant + 1 to show that it\u0027s different.",
      "range": {
        "startLine": 95,
        "startChar": 24,
        "endLine": 95,
        "endChar": 25
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7afb1c9_8b5f6f49",
        "filename": "bmc/version-handler/test/version_open_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 95,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7abb910_3e21ea20",
      "range": {
        "startLine": 95,
        "startChar": 24,
        "endLine": 95,
        "endChar": 25
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9e3339e_8529581d",
        "filename": "bmc/version-handler/test/version_read_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T20:21:12Z",
      "side": 1,
      "message": "nit: Same as the above test, maybe this could be a constant defined in the class?",
      "range": {
        "startLine": 56,
        "startChar": 24,
        "endLine": 56,
        "endChar": 27
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2cb30c5_1e3164c8",
        "filename": "bmc/version-handler/test/version_read_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9e3339e_8529581d",
      "range": {
        "startLine": 56,
        "startChar": 24,
        "endLine": 56,
        "endChar": 27
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e3b73b9_1e2e83f3",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 4,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "nit: Maybe this could go in the header in doxygen format?",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 4,
        "endChar": 3
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ce0093_42e22e0a",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 4,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e3b73b9_1e2e83f3",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 4,
        "endChar": 3
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af461eb8_44254da3",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "Could we explain why this is not allowed in a comment? (I\u0027m guessing it\u0027s because if this flag is already set, it means it\u0027s a stale session?)\n\nMaybe including an frprintf similar to other error paths to explain the failure.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32efdecd_4ee0c575",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "It\u0027s to guard against double opens. fprintf stderr added, no need for comment since the fprintf explains in adequate detail.",
      "parentUuid": "af461eb8_44254da3",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b54618cb_eca9c22d",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 123,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "I\u0027m a little confused by this, why do we pass in this \"don\u0027t care\" string here?",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 123,
        "endChar": 66
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "853e1580_6e11c9bc",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 123,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "doesn\u0027t look like the FileHandler impl cares about what the path is; instead filename is used, which is set by the constructor. I put in \"don\u0027t care\" here to make it more obvious to readers of the code that the underlying impl doesn\u0027t do anything with this value.",
      "parentUuid": "b54618cb_eca9c22d",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 123,
        "endChar": 66
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec03d51e_93c59daf",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "nit: typo?",
      "range": {
        "startLine": 126,
        "startChar": 34,
        "endLine": 126,
        "endChar": 40
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b99beb8_ba8bfca2",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec03d51e_93c59daf",
      "range": {
        "startLine": 126,
        "startChar": 34,
        "endLine": 126,
        "endChar": 40
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd003055_a150b76e",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "What if we had an exception after the imagehandler was opened? shouldn\u0027t we close?",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02db6a2f_04c5c0b6",
        "filename": "bmc/version-handler/version_handler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "narrowed what ends up in the try clause to make clear that the exceptions that are intended to be caught are the ones thrown from std::unordered_map::at . If an exception is thrown at this case the file is never opened and so it doesn\u0027t need to be closed.",
      "parentUuid": "cd003055_a150b76e",
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a87f62_b662607a",
        "filename": "bmc/version-handler/version_handler.hpp",
        "patchSetId": 8
      },
      "lineNbr": 45,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "Unfortunately, the OpenBMC coding style is that we shouldn\u0027t use _ https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#variables\n\nIt\u0027s annoying when having to code back and forth between OpenBMC and Google\u0027s coding standard :(",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 45,
        "endChar": 33
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e6e4cb1_0ac5e8fe",
        "filename": "bmc/version-handler/version_handler.hpp",
        "patchSetId": 8
      },
      "lineNbr": 45,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": ":(",
      "parentUuid": "11a87f62_b662607a",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 45,
        "endChar": 33
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49c791c3_e8946b50",
        "filename": "bmc/version-handler/version_handler.hpp",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "What is this string associated with? I\u0027m guessing blobId?\n\nEdit: I see from the code below that this is the case - Maybe it\u0027d be good to document that the key is _blobId of the VersionInfoPack?",
      "range": {
        "startLine": 48,
        "startChar": 47,
        "endLine": 48,
        "endChar": 53
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faabd7ab_c5fb72fd",
        "filename": "bmc/version-handler/version_handler.hpp",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49c791c3_e8946b50",
      "range": {
        "startLine": 48,
        "startChar": 47,
        "endLine": 48,
        "endChar": 53
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5514e92_2f6e426f",
        "filename": "bmc/version-handler/version_handler.hpp",
        "patchSetId": 8
      },
      "lineNbr": 102,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-12-03T19:58:09Z",
      "side": 1,
      "message": "Same as above with _",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 102,
        "endChar": 61
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30504175_6d8a1244",
        "filename": "bmc/version-handler/version_handler.hpp",
        "patchSetId": 8
      },
      "lineNbr": 102,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2020-12-07T22:36:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5514e92_2f6e426f",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 102,
        "endChar": 61
      },
      "revId": "f08c8692639e2f8c496e76fb0ad5fd427a0cfaa4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}
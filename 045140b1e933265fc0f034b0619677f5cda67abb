{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c5aa400d_d63b86e8",
        "filename": "bmc/log-handler/log_handler.cpp",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-12T22:37:17Z",
      "side": 1,
      "message": "const TriggerableActionInterface\u0026",
      "range": {
        "startLine": 24,
        "startChar": 33,
        "endLine": 24,
        "endChar": 59
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "517da2b2_7d706968",
        "filename": "bmc/log-handler/log_handler.cpp",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-11-16T07:24:23Z",
      "side": 1,
      "message": "all of the methods of the class are not constants, so will get an error",
      "parentUuid": "c5aa400d_d63b86e8",
      "range": {
        "startLine": 24,
        "startChar": 33,
        "endLine": 24,
        "endChar": 59
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56c5421a_620da269",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 51,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-12T22:37:17Z",
      "side": 1,
      "message": "why do we need capture groups at all?",
      "range": {
        "startLine": 51,
        "startChar": 30,
        "endLine": 51,
        "endChar": 53
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9aeb27b5_a08ee352",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 51,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-12-30T17:03:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56c5421a_620da269",
      "range": {
        "startLine": 51,
        "startChar": 30,
        "endLine": 51,
        "endChar": 53
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb04fa69_109794d4",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-12T22:37:17Z",
      "side": 1,
      "message": "This seems like it\u0027d throw everytime the blob name does not begin with /log/\n\nShouldn\u0027t we just be continuing instead of throwing?",
      "range": {
        "startLine": 51,
        "startChar": 11,
        "endLine": 58,
        "endChar": 13
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f3c1e7d_99e05b65",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-11-16T07:24:23Z",
      "side": 1,
      "message": "throwing error inside for loop will also do the same job right?, this way if there is a typo in json file that could be caught in the logs right?",
      "parentUuid": "bb04fa69_109794d4",
      "range": {
        "startLine": 51,
        "startChar": 11,
        "endLine": 58,
        "endChar": 13
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fe7b8ad_d66d57d1",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-16T22:42:04Z",
      "side": 1,
      "message": "My memory of phosphor-ipmi-flash are a bit fuzzy..but aren\u0027t things besides log blobs being passed into this?\n\nThat is your main calls LogHandlersBuilder().buildHandlerConfigFromDefaultPaths() .. see here\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-ipmi-flash/+/48302/11/bmc/log-handler/main.cpp#24\n\nwhich seems to iterate over the defaultPaths and lift all the jsons from that path here\n\nhttps://github.com/openbmc/phosphor-ipmi-flash/blob/a3f65698000d366b57d2916eae67518f89c1298b/bmc/buildjson.hpp#L49\n\nand\nhttps://github.com/openbmc/phosphor-ipmi-flash/blob/a3f65698000d366b57d2916eae67518f89c1298b/bmc/buildjson.hpp#L61\n\n\ndefault paths defined here\n\nhttps://github.com/openbmc/phosphor-ipmi-flash/blob/a3f65698000d366b57d2916eae67518f89c1298b/bmc/buildjson.cpp#L71\n\nultimately the json object gets passed to this handler\nhttps://github.com/openbmc/phosphor-ipmi-flash/blob/a3f65698000d366b57d2916eae67518f89c1298b/bmc/buildjson.hpp#L84\n\n\nSo it seems like all the jsons in the system would get parsed and it\u0027s not an error condition for a json to omit a log blob.\n\nSo throwing an error, catching it and then printing something out would spam the journal.",
      "parentUuid": "8f3c1e7d_99e05b65",
      "range": {
        "startLine": 51,
        "startChar": 11,
        "endLine": 58,
        "endChar": 13
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "defc3390_3b93904f",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-12-30T16:48:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fe7b8ad_d66d57d1",
      "range": {
        "startLine": 51,
        "startChar": 11,
        "endLine": 58,
        "endChar": 13
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b1652ff_e4270501",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-12T22:37:17Z",
      "side": 1,
      "message": "isn\u0027t this already done on line 48?",
      "range": {
        "startLine": 59,
        "startChar": 11,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4acb5fe6_dd2be349",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-12-30T16:48:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b1652ff_e4270501",
      "range": {
        "startLine": 59,
        "startChar": 11,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c598f0db_14a42b40",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 61,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-12T22:37:17Z",
      "side": 1,
      "message": "We probably want to add some documentation to the repository for this.\nIt\u0027s a pretty painful ask to make people read through the code to figure out what the config format is.",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 46
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb491d06_984530f6",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 61,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-11-16T07:24:23Z",
      "side": 1,
      "message": "so adding a readme to specify format of json should be enough right?",
      "parentUuid": "c598f0db_14a42b40",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 46
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15468aae_4b58e97c",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 61,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-12-30T17:28:27Z",
      "side": 1,
      "message": "Yup, adding a short README will help reduce the frustration of other users.",
      "parentUuid": "cb491d06_984530f6",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 46
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89691742_d1c887d5",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 61,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2022-01-04T23:29:38Z",
      "side": 1,
      "message": "Added a brief description in the readme file. PTAL",
      "parentUuid": "15468aae_4b58e97c",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 46
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8fa9ad6_184a2801",
        "filename": "bmc/log-handler/log_handlers_builder.cpp",
        "patchSetId": 11
      },
      "lineNbr": 61,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2022-01-06T12:50:40Z",
      "side": 1,
      "message": "Marking it resolved",
      "parentUuid": "89691742_d1c887d5",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 46
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba481f99_28543d0e",
        "filename": "bmc/log-handler/test/log_canhandle_enumerate_unittest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-12T22:51:54Z",
      "side": 1,
      "message": "what about testing for something the handler isn\u0027t supposed to handle?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 18,
        "endChar": 5
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b94bb3c8_4839d7f4",
        "filename": "bmc/log-handler/test/log_canhandle_enumerate_unittest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-11-16T07:24:23Z",
      "side": 1,
      "message": "I will add more test coverage in a following review.",
      "parentUuid": "ba481f99_28543d0e",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 18,
        "endChar": 5
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b11afbe_cef12097",
        "filename": "bmc/log-handler/test/log_mock.hpp",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-12T22:51:54Z",
      "side": 1,
      "message": "this seems to allow you to deeply test a lot more scenarios.\ne.g\n\n- what happens when the systemd service fails? Does the open/stat/whatever work correctly?\n- what happens when open can\u0027t actually open the file or if it\u0027s an empty file\n- what happens when the file is HUGE? Should we refuse to read files that are bigger than XXMB?\n- if we open a file with a given session number and read the data but open the file again with a different session number and the data refreshes is the first session properly kept up to date?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "259b14bb_893fac02",
        "filename": "bmc/log-handler/test/log_mock.hpp",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2021-11-16T07:24:23Z",
      "side": 1,
      "message": "More code coverage will be added in a follow up review",
      "parentUuid": "1b11afbe_cef12097",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "045140b1e933265fc0f034b0619677f5cda67abb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}